meta(charset="utf-8")
meta(http-equiv="X-UA-Compatible", content="IE=edge; charset=utf-8")
title= appTitle
meta(name="viewport", content="width=device-width, initial-scale=1.0")
link(href="https://fonts.googleapis.com/css?family=Overpass:200,400,700", rel="stylesheet")
link(rel="stylesheet", href="/stylesheets/style.css")
link(href="data:,", rel="icon")
script(type="text/javascript", src="/scripts/vue.js")
//- script(type="text/javascript", src="/scripts/vue.common.js")
script(type="text/javascript", src="/scripts/jquery.min.js")
script(type="text/javascript" src="https://meet.jit.si/libs/lib-jitsi-meet.min.js")
script(type="text/javascript" src="https://meet.jit.si/external_api.js")
script(type="text/javascript" src="/scripts/es6-promise.auto.min.js")
script.
	// Polyfill Object.assign 
	if (typeof Object.assign !== 'function') {
		// Must be writable: true, enumerable: false, configurable: true
		Object.defineProperty(Object, "assign", {
			value: function assign(target, varArgs) { // .length of function is 2
				'use strict';
				if (target === null || target === undefined) {
					throw new TypeError('Cannot convert undefined or null to object');
				}

				var to = Object(target);

				for (var index = 1; index < arguments.length; index++) {
					var nextSource = arguments[index];

					if (nextSource !== null && nextSource !== undefined) { 
						for (var nextKey in nextSource) {
							// Avoid bugs when hasOwnProperty is shadowed
							if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
								to[nextKey] = nextSource[nextKey];
							}
						}
					}
				}
				return to;
			},
			writable: true,
			configurable: true
		});
	}
